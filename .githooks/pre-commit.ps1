# Auto-update src/version.js with a UTC timestamp (yyyyMMdd-HHmmss)
# - Writes only if content changed (avoids dirtying the index unnecessarily)
# - Normalizes to LF line endings and UTF-8 (no BOM)
# - Works in Windows PowerShell and PowerShell 7+
# - Optional: set env VERSION_INCLUDE_SHA=1 to append short git SHA

$ErrorActionPreference = 'Stop'

# Resolve repo root and target file
$root = (git rev-parse --show-toplevel).Trim()
$versionFile = Join-Path $root 'src/version.js'

# Build version string
$ts = (Get-Date).ToUniversalTime().ToString('yyyyMMdd-HHmmss')

$ver = $ts
if ($env:VERSION_INCLUDE_SHA -eq '1') {
    try {
        $sha = (git rev-parse --short HEAD).Trim()
        if ($LASTEXITCODE -eq 0 -and $sha) { $ver = "$ts-$sha" }
    }
    catch { }
}

# Desired file contents (with trailing newline)
$js = @"
// this file is auto-generated by .githooks/pre-commit.ps1
export const BUILD_VERSION = '$ver';
"@.TrimEnd()

# Normalize to LF + trailing LF
$jsLF = ($js -replace "`r?`n", "`n") + "`n"

# Ensure target directory exists
$dir = Split-Path -Parent $versionFile
if (-not (Test-Path $dir)) { New-Item -ItemType Directory -Path $dir | Out-Null }

# Read current content (if any)
$current = ''
if (Test-Path $versionFile) {
    $current = Get-Content -LiteralPath $versionFile -Raw
    # Normalize current to LF for a fair comparison
    $current = $current -replace "`r?`n", "`n"
}

# Only write if changed
if ($current -ne $jsLF) {
    # Write UTF-8 without BOM and with LF endings
    if ($PSVersionTable.PSVersion.Major -ge 6) {
        # PowerShell 6+ supports -Encoding utf8NoBOM
        $jsLF | Out-File -LiteralPath $versionFile -NoNewline -Encoding utf8NoBOM
    }
    else {
        # Windows PowerShell fallback: use .NET to avoid BOM
        $utf8NoBom = New-Object System.Text.UTF8Encoding($false)
        [System.IO.File]::WriteAllText($versionFile, $jsLF, $utf8NoBom)
    }

    # Stage the file for commit
    git add -- "src/version.js"
}
# otherwise, do nothing (keeps commit clean)
